# This is a GitHub Actions workflow file to build and deploy to Google Cloud Run
# It triggers on every push to the 'main' branch.

name: Deploy to Cloud Run

on:
  push:
    branches:
      - 'main'

env:
  PROJECT_ID: draft-maker-468923
  GAR_LOCATION: us-west1 # The region of your Artifact Registry
  SERVICE_NAME: draft-maker
  REGION: us-west1 # The region for your Cloud Run service

jobs:
  deploy:
    name: Build and Deploy
    # This grants the necessary permissions for authentication with Google Cloud
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: Set up Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: Configure Docker
        run: gcloud auth configure-docker ${{ env.GAR_LOCATION }}-docker.pkg.dev

      - name: Build and push Docker image
        run: |
          docker build -f Dockerfile.production -t ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}/image:latest .
          docker push ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}/image:latest

      - name: Deploy to Cloud Run
        id: deploy
        uses: 'google-github-actions/deploy-cloudrun@v2'
        with:
          service: ${{ env.SERVICE_NAME }}
          region: ${{ env.REGION }}
          # Point to the image you just pushed
          image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}/image:latest
          # Service account for Cloud Run service
          service_account: draft-maker-identity@${{ env.PROJECT_ID }}.iam.gserviceaccount.com
          # Environment variables
          env_vars: |
            ENVIRONMENT=production
            GCP_PROJECT_ID=${{ env.PROJECT_ID }}
            GCP_REGION=${{ env.REGION }}
            STORAGE_BUCKET_NAME=draft-maker-bucket
            FIRESTORE_DATABASE_ID=(default)
            FIRESTORE_DATABASE_NAME=(default)
            LOG_LEVEL=INFO
            SERVICE_ACCOUNT_OAUTH_2_CLIENT_ID=117616124807389754852
            FIRESTORE_COLLECTION_MBID=mbid_cache
            FIRESTORE_COLLECTION_LOGS=function_logs
            FIRESTORE_COLLECTION_TOKENS=api_tokens
            FIRESTORE_COLLECTION_PROCESSED_FILES=processed_files
            FIRESTORE_COLLECTION_DRAFT_LISTINGS=draft_listings
            EBAY_FULFILLMENT_POLICY_ID=345923687022
            EBAY_PAYMENT_POLICY_ID=345889112022
            EBAY_RETURN_POLICY_ID=345889054022
            EBAY_CATEGORY_ID=176984
            MUSICBRAINZ_USER_AGENT=draftmaker/1.0 ( benjaminabramowitz@gmail.com )
          # Secrets from Secret Manager
          secrets: |
            DISCOGS_CONSUMER_KEY=DISCOGS_CONSUMER_KEY:latest
            DISCOGS_CONSUMER_SECRET=DISCOGS_CONSUMER_SECRET:latest
            EBAY_APP_ID=EBAY_APP_ID:latest
            EBAY_DEV_ID=EBAY_DEV_ID:latest
            EBAY_CERT_ID=EBAY_CERT_ID:latest
            EBAY_CLIENT_SECRET=EBAY_CLIENT_SECRET:latest
            SPOTIFY_CLIENT_ID=SPOTIFY_CLIENT_ID:latest
            SPOTIFY_CLIENT_SECRET=SPOTIFY_CLIENT_SECRET:latest

      - name: Output deployment URL
        run: echo "Successfully deployed to ${{ steps.deploy.outputs.url }}"

