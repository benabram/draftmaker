rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if the request is from an authorized service account
    function isAuthorizedServiceAccount() {
      return request.auth != null && (
        request.auth.uid == "117616124807389754852" ||  // draft-maker-identity service account
        request.auth.uid == "100850421393398263519"      // github-actions service account (read-only)
      );
    }
    
    // Helper function to check if the request is from the main service account with write permissions
    function hasWritePermission() {
      return request.auth != null && 
        request.auth.uid == "117616124807389754852";  // draft-maker-identity service account
    }
    
    // Helper function to check if the request is from GitHub Actions (read-only)
    function isGitHubActions() {
      return request.auth != null && 
        request.auth.uid == "100850421393398263519";  // github-actions service account
    }
    
    // UPC Mappings Collection
    match /upc_mappings/{document=**} {
      allow read: if isAuthorizedServiceAccount();
      allow write: if hasWritePermission();
    }
    
    // Album Metadata Collection
    match /album_metadata/{document=**} {
      allow read: if isAuthorizedServiceAccount();
      allow write: if hasWritePermission();
    }
    
    // Album Images Collection
    match /album_images/{document=**} {
      allow read: if isAuthorizedServiceAccount();
      allow write: if hasWritePermission();
    }
    
    // Pricing Data Collection
    match /pricing_data/{document=**} {
      allow read: if isAuthorizedServiceAccount();
      allow write: if hasWritePermission();
      
      // Subcollection: history
      match /history/{historyDoc} {
        allow read: if isAuthorizedServiceAccount();
        allow write: if hasWritePermission();
      }
    }
    
    // OAuth Tokens Collection - Extra security for sensitive data
    match /oauth_tokens/{document=**} {
      // Only the main service account can read/write OAuth tokens
      // GitHub Actions should NOT have access to tokens
      allow read: if hasWritePermission();
      allow write: if hasWritePermission();
    }
    
    // Draft Listings Collection
    match /draft_listings/{document=**} {
      allow read: if isAuthorizedServiceAccount();
      allow write: if hasWritePermission();
    }
    
    // Batch Jobs Collection
    match /batch_jobs/{document=**} {
      allow read: if isAuthorizedServiceAccount();
      allow write: if hasWritePermission();
      
      // Subcollection: items
      match /items/{itemDoc} {
        allow read: if isAuthorizedServiceAccount();
        allow write: if hasWritePermission();
      }
    }
    
    // API Logs Collection
    match /api_logs/{document=**} {
      allow read: if isAuthorizedServiceAccount();
      allow write: if hasWritePermission();
    }
    
    // Processed Files Collection
    match /processed_files/{document=**} {
      allow read: if isAuthorizedServiceAccount();
      allow write: if hasWritePermission();
    }
    
    // Function Logs Collection (existing from config)
    match /function_logs/{document=**} {
      allow read: if isAuthorizedServiceAccount();
      allow write: if hasWritePermission();
    }
    
    // MBID Cache Collection (existing from config)
    match /mbid_cache/{document=**} {
      allow read: if isAuthorizedServiceAccount();
      allow write: if hasWritePermission();
    }
    
    // API Tokens Collection (existing from config)
    match /api_tokens/{document=**} {
      // Same security as oauth_tokens - only main service account
      allow read: if hasWritePermission();
      allow write: if hasWritePermission();
    }
    
    // Default deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
